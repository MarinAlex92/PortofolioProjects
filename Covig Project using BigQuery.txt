/*
Covid 19 Data Exploration using BigQuery
Skills used: Joins, Temp Tables, Windows Functions, Aggregate Functions, Creating Views
*/


select *
from  `covid-project-354713.covid_data.covid_deaths`
where continent is null
order by 3,4


-- Select the data that we are going to be starting with
SELECT location, date, total_cases, new_cases, total_deaths, population
from covid_data.covid_deaths
order by 1,2


-- Total Cases vs Total Deaths
-- Shows likelihood of dying if you contract covid in your country
SELECT location, date, total_cases, total_deaths, round((total_deaths/total_cases)*100,2) || '%' as death_percentage
FROM `covid-project-354713.covid_data.covid_deaths`
where location like '%Romania%'
and continent is not null
order by 1,2


-- Total Cases vs Population
-- Shows what percentage of population got infected with Covid
SELECT location, date, population, total_cases, round((total_cases/population)*100,2) || '%' as infected_percentage
FROM `covid-project-354713.covid_data.covid_deaths`
where location like '%Romania%'
order by 1,2


-- Looking at countries with highest infection rate compared to population
SELECT location, population, max(total_cases) as highest_infection_count, max(round((total_cases/population)*100,2)||'%') as infected_percentage
FROM `covid-project-354713.covid_data.covid_deaths`
group by location, population
order by infected_percentage desc


-- Showing the countries with the highest death count per population
SELECT location, max(total_deaths) as total_death_count
FROM `covid-project-354713.covid_data.covid_deaths`
where continent is not null
group by location
order by total_death_count desc

-- BREAKING THINGS DOWN BY CONTINENT
-- Showing continents with the highest death count per populationn
SELECT continent, max(total_deaths) as total_death_count
FROM `covid-project-354713.covid_data.covid_deaths`
where continent is not null
group by continent
order by total_death_count desc


-- Global numbers
select date, sum(new_cases) as total_cases, sum(new_deaths) as total_deaths, round(sum(new_deaths)/sum(new_cases)*100,2) || '%' as death_percentage
from  `covid-project-354713.covid_data.covid_deaths`
where continent is not null
group by date
order by 1,2


-- Total Population vs Vaccinations
-- Shows Percentage of Population that has recieved at least one Covid Vaccine
select dea.continent, dea.location, dea.date, dea.population, vac.new_vaccinations,
    sum(vac.new_vaccinations) over (partition by dea.location order by dea.location, dea.date) as rolling_people_vaccinated
from `covid-project-354713.covid_data.covid_deaths` as dea
join `covid-project-354713.covid_data.covid_vaccinations` as vac
    on dea.location = vac.location and dea.date = vac.date
where dea.continent is not null
order by 2,3


-- Using Temp Table to perform Calculation on Partition By in previous query
Create Temp Table PercentPopulationVaccinated
(
Continent STRING,
Location STRING,
Date DATE,
Population INTEGER,
New_vaccinations INTEGER,
RollingPeopleVaccinated INTEGER
);
Insert into PercentPopulationVaccinated
select dea.continent, dea.location, dea.date, dea.population, vac.new_vaccinations,
    sum(vac.new_vaccinations) over (partition by dea.location order by dea.location, dea.date) as rolling_people_vaccinated
from `covid-project-354713.covid_data.covid_deaths` as dea
join `covid-project-354713.covid_data.covid_vaccinations` as vac
    on dea.location = vac.location and dea.date = vac.date
where dea.continent is not null
;
Select *, round((RollingPeopleVaccinated/Population)*100,2) || '%' as percentage_rolling_vaccinated
From PercentPopulationVaccinated


-- Create View to store data for later visualisation
create view covid_data.percentpopulationvaccinated as 
select dea.continent, dea.location, dea.date, dea.population, vac.new_vaccinations,
    sum(vac.new_vaccinations) over (partition by dea.location order by dea.location, dea.date) as rolling_people_vaccinated
from `covid-project-354713.covid_data.covid_deaths` as dea
join `covid-project-354713.covid_data.covid_vaccinations` as vac
    on dea.location = vac.location and dea.date = vac.date
where dea.continent is not null
